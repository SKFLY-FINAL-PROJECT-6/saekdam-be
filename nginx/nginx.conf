user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;
events {
   worker_connections 1024;
}
http {
   log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
   access_log  /var/log/nginx/access.log  main;
   sendfile            on;
   tcp_nopush          on;
   keepalive_timeout   65;
   types_hash_max_size 4096;
   include             /etc/nginx/mime.types;
   default_type        application/octet-stream;

   # HTTP 서버 설정
   server {
       listen       80;
       listen       [::]:80;
       server_name  saekdam.kro.kr;
       # HTTP를 HTTPS로 리다이렉트
       return 301 https://$server_name$request_uri;
   }

   # HTTPS 서버 설정
   server {
       listen       443 ssl;
       listen       [::]:443 ssl;
       server_name  saekdam.kro.kr;
       root         /usr/share/nginx/html;

       # SSL 인증서 설정
       ssl_certificate /etc/letsencrypt/live/saekdam.kro.kr/fullchain.pem;
       ssl_certificate_key /etc/letsencrypt/live/saekdam.kro.kr/privkey.pem;
       ssl_protocols TLSv1.2 TLSv1.3;
       ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
       ssl_prefer_server_ciphers off;

       location / {
           try_files $uri $uri/ /index.html;
       }

       location /api/ {
            proxy_pass http://10.0.136.122:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_request_headers on;
       }
   }
}