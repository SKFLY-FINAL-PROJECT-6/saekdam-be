version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: sunbeen/saekdam-be:latest
        container_name: app-app
        env_file:
            - .env
        ports:
            - '8080:8080'
        environment:
            - AWS_S3_REGION=${AWS_REGION}
            - REDIS_HOST=redis
        depends_on:
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
        networks:
            - backend

    mysql:
        image: mysql:8.0
        container_name: app-mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - '3306:3306'
        volumes:
            - mysql_data:/var/lib/mysql
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - backend

    redis:
        image: redis:7.0
        container_name: app-redis
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        command: >
            redis-server 
            --appendonly yes 
            --maxmemory 512mb 
            --maxmemory-policy volatile-lru
        deploy:
            resources:
                limits:
                    memory: 768M
                reservations:
                    memory: 256M
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - backend

volumes:
    mysql_data:
    redis_data:

networks:
    backend:
        driver: bridge
