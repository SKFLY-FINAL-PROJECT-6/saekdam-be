name: EC2 배포 (Docker Hub 기반)

on:
    push:
        branches:
            - main

permissions:
    id-token: write
    contents: read

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: 리포지토리 체크아웃
              uses: actions/checkout@v3

            - name: Docker Hub 로그인
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Docker 이미지 빌드
              run: |
                  docker build -t typingmistake/saekdam-be:latest .

            - name: Docker Hub에 푸시
              run: |
                  docker push typingmistake/saekdam-be:latest

    deploy:
        needs: build-and-push
        runs-on: ubuntu-latest
        steps:
            - name: AWS 자격 증명 설정
              uses: aws-actions/configure-aws-credentials@v3
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: EC2에서 최신 이미지 pull 및 배포
              run: |
                  aws ssm send-command \
                    --document-name "AWS-RunShellScript" \
                    --targets "Key=instanceIds,Values=${{ secrets.EC2_INSTANCE_ID }}" \
                    --parameters "{\"commands\":[\
                      \"sudo yum update -y\",\
                      \"sudo yum install -y docker docker-compose-plugin\",\
                      \"sudo systemctl start docker\",\
                      \"sudo systemctl enable docker\",\
                      \"sudo usermod -aG docker ec2-user\",\
                      \"mkdir -p /home/ec2-user/app\",\
                      \"echo \\\"DB_HOST=${{ secrets.DB_HOST }}\\\" > /home/ec2-user/app/.env\",\
                      \"echo \\\"DB_PORT=${{ secrets.DB_PORT }}\\\" >> /home/ec2-user/app/.env\",\
                      \"echo \\\"DB_NAME=${{ secrets.DB_NAME }}\\\" >> /home/ec2-user/app/.env\",\
                      \"echo \\\"DB_USER=${{ secrets.DB_USER }}\\\" >> /home/ec2-user/app/.env\",\
                      \"echo \\\"DB_PASSWORD=${{ secrets.DB_PASSWORD }}\\\" >> /home/ec2-user/app/.env\",\
                      \"echo \\\"AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}\\\" >> /home/ec2-user/app/.env\",\
                      \"echo \\\"AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}\\\" >> /home/ec2-user/app/.env\",\
                      \"echo \\\"AWS_S3_ACCESS_KEY=${{ secrets.AWS_S3_ACCESS_KEY }}\\\" >> /home/ec2-user/app/.env\",\
                      \"echo \\\"AWS_S3_SECRET_KEY=${{ secrets.AWS_S3_SECRET_KEY }}\\\" >> /home/ec2-user/app/.env\",\
                      \"echo \\\"AWS_S3_REGION=${{ secrets.AWS_REGION }}\\\" >> /home/ec2-user/app/.env\",\
                      \"echo \\\"AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}\\\" >> /home/ec2-user/app/.env\",\
                      \"echo \\\"JWT_SECRET=${{ secrets.JWT_SECRET }}\\\" >> /home/ec2-user/app/.env\",\
                      \"docker pull typingmistake/saekdam-be:latest\",\
                      \"sudo docker compose --env-file /home/ec2-user/app/.env -f /home/ec2-user/app/docker-compose.yml down\",\
                      \"sudo docker compose --env-file /home/ec2-user/app/.env -f /home/ec2-user/app/docker-compose.yml up -d\"\
                    ]}"
